#!/usr/intel/bin/bash

export SHELL=/usr/intel/bin/bash
export LC_ALL=en_US.UTF-8 # use UTF-8 character encoding
export ALL_PROXY="http://proxy.${EC_SITE}.intel.com:911" # proxy for anything
export HTTP_PROXY=$ALL_PROXY # proxy for http
export GCONFTOOL=gconftool-2 # required to configure the theme of Gnome
export VERILATOR_ROOT=~/personal/verilator-3.884 # used to build verilator models
export EDITOR=/usr/intel/bin/vim # editor for commit messages and command edits
export SC_HOSTNAME=sccj002253.sc.intel.com
export FC_HOSTNAME=fcab1221.fc.intel.com
export PDX_HOSTNAME=plxd3483.pdx.intel.com
export PROMPT_DIRTRIM=5
export MODEL_ROOT

if [[ $EC_SITE == 'sc' ]]; then
    export DSHOST=$SC_HOSTNAME
    if [[ -x $DISPLAY ]]; then
        export DISPLAY=$HOSTNAME:1.0
    fi
elif [[ $EC_SITE == 'fc' ]]; then
    export DSHOST=$FC_HOSTNAME
else
    export DSHOST=$PDX_HOSTNAME
fi


#dont load interactive config if using a non-interactive shell
if [[ -z ${PS1+x} ]]; then
    return
fi

shopt -s extglob # use extended globs
shopt -s cmdhist # save multiline commands as one command
shopt -s autocd # change directories without cd command
shopt -s cdspell # fix cd spelling errors
shopt -s checkwinsize # updated LINES and COLUMNS
shopt -s dirspell # check directory names for errors
shopt -s globstar # use ** to glob recursivley
shopt -s histverify # let me edit history substution commands before I run them
shopt -s no_empty_cmd_completion # don't attempt completion on empty commands

stty erase '^?'

# Path to the bash it configuration
export BASH_IT=~/.bash-it
export BASH_IT_CUSTOM=~/.bash

# Lock and Load a custom theme file
# location /.bash_it/themes/
export BASH_IT_THEME='troy'

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=false

# (Advanced): Uncomment this to make Bash-it reload itself automatically
# after enabling or disabling aliases, plugins, and completions.
# export BASH_IT_AUTOMATIC_RELOAD_AFTER_CONFIG_CHANGE=1

#
# GNU Readline options
#
bind "set colored-completion-prefix on" # color the common prefix of a completion
bind "set mark-symlinked-directories on" # add a / to the end of completed symlinked directories
bind "set page-completions off" # don't use a pager for completion suggestions
bind "set show-all-if-unmodified on" # if there is no common prefix display completion suggestions
bind "set skip-completed-text on" # don't complete text that is already there
bind "set history-preserve-point on" # keep the same cursor postions when cycling through history items
bind "set bell-style visible" # don't 'ding' when ringing the bell

# Load Bash It
# shellcheck source=/nfs/site/home/tjhinckl/.bash-it/bash_it.sh
[[ -s $BASH_IT/bash_it.sh ]] && source $BASH_IT/bash_it.sh

munge PATH ~/bin
munge MANPATH ~/.local/share/man

complete -F _fzf_path_completion -o default -o bashdefault e # add fzf completion to emacs
complete -F _fzf_path_completion -o default -o bashdefault less # add fzf completion to less
export FZF_TMUX=1 # use tmux pane for fzf popup
export FZF_COMPLETION_TRIGGER='ff' # use ff as a trigger sequence

restore_hist () {
    if [[ $TMUX_PANE ]]; then
        local tmux_abs=/usr/intel/bin/tmux
        HISTFILE=~/.tmux/bash_history/bash_history.$($tmux_abs display-message -p '#S').$TMUX_PANE

        if [[ -f ~/temp/tmux_restore_running ]]; then
            local pane_index window_number session_name restore_file
	        pane_index=$(   $tmux_abs display -pt "${TMUX_PANE}" '#{pane_index}'  )
	        window_number=$($tmux_abs display -pt "${TMUX_PANE}" '#{window_index}')
	        session_name=$( $tmux_abs display -pt "${TMUX_PANE}" '#{session_name}')
            restore_file=~/.tmux/resurrect/bash_history-"$session_name:$window_number.$pane_index"
            if [[ -f $restore_file ]]; then
	            cp "$restore_file" "$HISTFILE"
            fi
        fi
        touch "$HISTFILE"
    fi
}

restore_hist

BASE16_SHELL=~/.config/base16-shell/

[[ -z ${INSIDE_EMACS+x} ]] &&
    # [[ -z $SSH_CLIENT ]] &&
    # [[ -z $SSH_TTY ]] &&
    [[ -n $PS1 ]] &&
    [[ -s $BASE16_SHELL/profile_helper.sh ]] &&
    eval "$("$BASE16_SHELL"/profile_helper.sh)"

# shellcheck source=/nfs/site/home/tjhinckl/.autojump/etc/profile.d/autojump.sh
[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] && source ~/.autojump/etc/profile.d/autojump.sh

# shellcheck source=/nfs/site/home/tjhinckl/.dotfiles/history/history.sh
[[ -s $HOME/.dotfiles/history/history.sh ]] && source ~/.dotfiles/history/history.sh

precmd() {
    echo -en "\a" # sound the bell
    history -a # append to history file
    # make sure we are not in manual mode
    if [[ -z ${MANUAL_MODEL_ROOT+x} ]]; then
        MODEL_ROOT=$(get-root)
    fi
}

munge -cmd -end PROMPT_COMMAND precmd

if [[ -d ~/perl5 ]]; then
    eval "$(perl -I"$HOME"/perl5/lib/perl5 -Mlocal::lib)"
    munge -end PATH ~/perl5/bin
    munge MANPATH ~/perl5/man
fi

export HH_CONFIG=hicolor,keywords # use more colors and search by keywords
# if this is interactive shell, then bind hh to Ctrl-r
[[ $- =~ .*i.* ]] && bind '"\C-r": "\C-a hh -- \C-j"'

export HISTCONTROL=ignoredups

